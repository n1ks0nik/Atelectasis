services:
  api:
    build: .
    container_name: api
    ports:
      - "8000:8000"
    environment:
      KAFKA_BOOTSTRAP: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - kafka-network

  processing:
    build: ./Service/microservices/ai_processor
    container_name: processing
    environment:
      KAFKA_BOOTSTRAP: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - kafka-network

  storage_reporting:
    build: ./Service/microservices/storage_service
    container_name: storage_reporting
    environment:
      KAFKA_BOOTSTRAP: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - kafka-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      # Настройки для Group Coordinator
      KAFKA_OFFSETS_RETENTION_MINUTES: 1440
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      # Уменьшаем таймауты для быстрого старта
      KAFKA_REPLICA_SOCKET_TIMEOUT_MS: 1000
      KAFKA_CONTROLLER_SOCKET_TIMEOUT_MS: 1000
      # Дополнительные настройки для стабильности
      KAFKA_GROUP_COORDINATOR_REBALANCE_PROTOCOLS: consumer
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    healthcheck:
      test: |
        timeout 10s bash -c ':> /dev/tcp/localhost/9092' || exit 1
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge